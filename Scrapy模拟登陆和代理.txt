# 模拟登录与中间件
#处理cookie

### 1. 方案一, 直接从浏览器复制cookie过来
def start_requests(self):
    # 直接从浏览器复制
    cookies = "GUID=bbb5f65a-2fa2-40a0-ac87-49840eae4ad1; c_channel=0; c_csc=web; Hm_lvt_9793f42b498361373512340937deb2a0=1627572532,1627711457,1627898858,1628144975; accessToken=avatarUrl%3Dhttps%253A%252F%252Fcdn.static.17k.com%252Fuser%252Favatar%252F16%252F16%252F64%252F75836416.jpg-88x88%253Fv%253D1610625030000%26id%3D75836416%26nickname%3D%25E5%25AD%25A4%25E9%25AD%2582%25E9%2587%258E%25E9%25AC%25BCsb%26e%3D1643697376%26s%3D73f8877e452e744c; sensorsdata2015jssdkcross=%7B%22distinct_id%22%3A%2275836416%22%2C%22%24device_id%22%3A%2217700ba9c71257-035a42ce449776-326d7006-2073600-17700ba9c728de%22%2C%22props%22%3A%7B%22%24latest_traffic_source_type%22%3A%22%E7%9B%B4%E6%8E%A5%E6%B5%81%E9%87%8F%22%2C%22%24latest_referrer%22%3A%22%22%2C%22%24latest_referrer_host%22%3A%22%22%2C%22%24latest_search_keyword%22%3A%22%E6%9C%AA%E5%8F%96%E5%88%B0%E5%80%BC_%E7%9B%B4%E6%8E%A5%E6%89%93%E5%BC%80%22%7D%2C%22first_id%22%3A%22bbb5f65a-2fa2-40a0-ac87-49840eae4ad1%22%7D; Hm_lpvt_9793f42b498361373512340937deb2a0=1628145672"
    cookie_dic = {}
    for c in cookies.split("; "):
        k, v = c.split("=")
        cookie_dic[k] = v

    yield Request(
        url=LoginSpider.start_urls[0],
        cookies=cookie_dic,
        callback=self.parse
    )




### 2. 方案二, 完成登录过程.


def start_requests(self):
    # 登录流程
    username = "18614075987"
    password = "q6035945"
    url = "https://passport.17k.com/ck/user/login"

    # 发送post请求
    # yield Request(
    #     url=url,
    #     method="post",
    #     body="loginName=18614075987&password=q6035945",
    #     callback=self.parse
    # )

    # 发送post请求
    yield FormRequest(
        url=url,
        formdata={
            "loginName": username,
            "password": password
        },
        callback=self.parse
    )


def parse(self, response):
    # 得到响应结果. 直接请求到默认的start_urls
    yield Request(
        url=LoginSpider.start_urls[0],
        callback=self.parse_detail
    )


def parse_detail(self, resp):
    print(resp.text)

#Scarpy.FormRequest(url=url, formdata=数据)  -> 推荐




### 3. 方案三, 在settings文件中给出cookie值.
COOKIES_ENABLED = False

DEFAULT_REQUEST_HEADERS = {
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
    'Accept-Language': 'en',
    'Cookie': 'xxxxxx',
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.54 Safari/537.36"
}
#代理处理：收费代理

class MoneyProxyMiddleware:
    def _get_proxy(self):
        """
        912831993520336 t12831993520578 每次请求换IP
        tps138.kdlapi.com 15818
        需实名认证   5次/s    5Mb/s   有效  续费|订单详情|实名认证
        隧道用户名密码修改密码
        用户名：t12831993520578密码：t72a13xu
        :return:
        """
        url = "http://tps138.kdlapi.com:15818"
        auth = basic_auth_header(username="t12831993520578", password="t72a13xu")
        return url, auth

    def process_request(self, request, spider):
        print("......")
        url, auth = self._get_proxy()
        request.meta['proxy'] = url
        request.headers['Proxy-Authorization'] = auth
        request.headers['Connection'] = 'close'
        return None

    def process_response(self, request, response, spider):
        print(response.status, type(response.status))
        if response.status != 200:
            request.dont_filter = True
            return request
        return response

    def process_exception(self, request, exception, spider):
        pass